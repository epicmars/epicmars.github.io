<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>工程与架构 on 风格与布局</title>
    <link>https://www.androidpi.com/engineering/</link>
    <description>Recent content in 工程与架构 on 风格与布局</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Thu, 25 Jan 2018 17:43:12 +0800</lastBuildDate>
    
	<atom:link href="https://www.androidpi.com/engineering/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>工厂方法与抽象工厂模式</title>
      <link>https://www.androidpi.com/engineering/pattern/factory-pattern/</link>
      <pubDate>Thu, 25 Jan 2018 17:43:12 +0800</pubDate>
      
      <guid>https://www.androidpi.com/engineering/pattern/factory-pattern/</guid>
      <description></description>
    </item>
    
    <item>
      <title>代码之道</title>
      <link>https://www.androidpi.com/engineering/2016-06-22-the-dao-of-coding/</link>
      <pubDate>Wed, 22 Jun 2016 15:42:45 +0800</pubDate>
      
      <guid>https://www.androidpi.com/engineering/2016-06-22-the-dao-of-coding/</guid>
      <description>写代码应该被当作一件神圣的事，在编码的过程中，可以充分发挥一个人的知识、经验与想象力，打造出一件件艺术品。 写代码之前 是否易于复用 是否易于替换</description>
    </item>
    
    <item>
      <title>设计模式从MVC谈起</title>
      <link>https://www.androidpi.com/engineering/2016-02-18-mvc/</link>
      <pubDate>Thu, 18 Feb 2016 01:27:07 +0800</pubDate>
      
      <guid>https://www.androidpi.com/engineering/2016-02-18-mvc/</guid>
      <description>关键词：MVC，可复用，插件化 1、MVC（Model–View–Controller） MVC模式，是一种实现用户界面的软件架构模式。它将一个</description>
    </item>
    
    <item>
      <title>持续集成(Continuous Integration)</title>
      <link>https://www.androidpi.com/engineering/2018-04-27-continuous-integration/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.androidpi.com/engineering/2018-04-27-continuous-integration/</guid>
      <description></description>
    </item>
    
  </channel>
</rss>