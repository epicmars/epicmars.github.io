<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>开发 on 风格与布局</title>
    <link>https://www.androidpi.com/dev/</link>
    <description>Recent content in 开发 on 风格与布局</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Sat, 14 Jul 2018 15:18:31 +0800</lastBuildDate>
    
	<atom:link href="https://www.androidpi.com/dev/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Gradle构建：自定义插件</title>
      <link>https://www.androidpi.com/dev/gradle/2018-07-14-gradle-custom-plugin/</link>
      <pubDate>Sat, 14 Jul 2018 15:18:31 +0800</pubDate>
      
      <guid>https://www.androidpi.com/dev/gradle/2018-07-14-gradle-custom-plugin/</guid>
      <description>Gradle插件将可以复用的构建逻辑进行打包，然后就可以在不同的工程和构建中进行使用了。Gradle允许创建你自己的插件，使得你可以复用你的</description>
    </item>
    
    <item>
      <title>Gradle构建：自定义Task类</title>
      <link>https://www.androidpi.com/dev/gradle/2018-07-14-gradle-custom-task-class/</link>
      <pubDate>Sat, 14 Jul 2018 14:19:06 +0800</pubDate>
      
      <guid>https://www.androidpi.com/dev/gradle/2018-07-14-gradle-custom-task-class/</guid>
      <description>Gradle支持两种类型的任务，一种是使用一个操作闭包定义的简单任务，对于这种类型的任务，操作闭包决定了任务的行为，它对于实现构建脚本中的一</description>
    </item>
    
    <item>
      <title>Gradle构建：增量构建</title>
      <link>https://www.androidpi.com/dev/gradle/2018-07-14-gradle-incremental-build/</link>
      <pubDate>Sat, 14 Jul 2018 14:04:45 +0800</pubDate>
      
      <guid>https://www.androidpi.com/dev/gradle/2018-07-14-gradle-incremental-build/</guid>
      <description>构建中的一项能力就是避免进行已经做过的工作。考虑编译的过程，一旦你的源代码已经编译过了，除非作出了影响输出的修改，那就没有必要重新编译。Gr</description>
    </item>
    
    <item>
      <title>Gradle构建：Task开发指南</title>
      <link>https://www.androidpi.com/dev/gradle/2018-07-14-gradle-task-develop-guide/</link>
      <pubDate>Sat, 14 Jul 2018 11:23:10 +0800</pubDate>
      
      <guid>https://www.androidpi.com/dev/gradle/2018-07-14-gradle-task-develop-guide/</guid>
      <description>简单的任务 一个任务代表一个构建执行的一部分工作（atomic piece of work）。它可能是编译一些类、创建一个JAR、生成Javadoc或者将一存</description>
    </item>
    
    <item>
      <title>理解Gradle构建系统</title>
      <link>https://www.androidpi.com/dev/gradle/2018-07-10-understanding-gradle-build-system/</link>
      <pubDate>Tue, 10 Jul 2018 23:42:49 +0800</pubDate>
      
      <guid>https://www.androidpi.com/dev/gradle/2018-07-10-understanding-gradle-build-system/</guid>
      <description>近来看了若干关于Gradle的文章和书籍，发现这些文章很大程度上只是官方文档的堆砌，比如Groovy与DSL基础，Gradle有什么基础组件</description>
    </item>
    
    <item>
      <title>Gradle构建脚本开发指南</title>
      <link>https://www.androidpi.com/dev/gradle/2018-07-10-gradle-build-script-develop-guide/</link>
      <pubDate>Tue, 10 Jul 2018 23:30:37 +0800</pubDate>
      
      <guid>https://www.androidpi.com/dev/gradle/2018-07-10-gradle-build-script-develop-guide/</guid>
      <description>Groovy语言 Gradle构建脚本提供了Groovy这一强大的语言工具： task upper { doLast { String someString = &amp;#39;mY_nAmE&amp;#39; println &amp;#34;Original: &amp;#34; + someString println &amp;#34;Upper case: &amp;#34; + someString.toUpperCase() } } API 核心类 Gradle构</description>
    </item>
    
    <item>
      <title>Groovy与DSL</title>
      <link>https://www.androidpi.com/dev/gradle/2018-07-10-groovy-and-dsl/</link>
      <pubDate>Tue, 10 Jul 2018 23:29:59 +0800</pubDate>
      
      <guid>https://www.androidpi.com/dev/gradle/2018-07-10-groovy-and-dsl/</guid>
      <description>类型 字符串 除了Java中的java.lang.String类，还有一个groovy.lang.GString类，GString可以进行插值。</description>
    </item>
    
    <item>
      <title>理解回环接口（Loopback Interface）</title>
      <link>https://www.androidpi.com/dev/networks/2018-07-01-loopback-interface/</link>
      <pubDate>Sun, 01 Jul 2018 22:40:30 +0800</pubDate>
      
      <guid>https://www.androidpi.com/dev/networks/2018-07-01-loopback-interface/</guid>
      <description>IP协议指定一个回环网络的IPv4地址为127.0.0.0/8，大多数IP协议实现都支持一个回环接口来表示回环设施。一个计算机上的程序在回环</description>
    </item>
    
    <item>
      <title>React Native开发基础知识</title>
      <link>https://www.androidpi.com/dev/react-native/2018-05-19-react-native-develop-guide/</link>
      <pubDate>Sat, 19 May 2018 11:54:16 +0800</pubDate>
      
      <guid>https://www.androidpi.com/dev/react-native/2018-05-19-react-native-develop-guide/</guid>
      <description>目前React Native的最新版本为0.55。 开发模式环境 完全使用JavaScript进行开发 如果不需要自定义原生代码，完全使用JavaS</description>
    </item>
    
    <item>
      <title>Linux init系统与后台进程管理</title>
      <link>https://www.androidpi.com/dev/linux/2018-05-06-linux-init-system-and-background-process-management/</link>
      <pubDate>Sun, 06 May 2018 14:10:57 +0800</pubDate>
      
      <guid>https://www.androidpi.com/dev/linux/2018-05-06-linux-init-system-and-background-process-management/</guid>
      <description>什么是init系统 计算机的启动过程从主板上的BIOS（Basic Input / Output System）软件开始，在完成了硬件的初始化和检查后，BIOS启动引导</description>
    </item>
    
    <item>
      <title>Gitlab搭建与Gitlab Pages配置</title>
      <link>https://www.androidpi.com/dev/pages/2018-05-05-gitlab-pages/</link>
      <pubDate>Sat, 05 May 2018 09:58:41 +0800</pubDate>
      
      <guid>https://www.androidpi.com/dev/pages/2018-05-05-gitlab-pages/</guid>
      <description>安装 安装环境为ubuntu14.04，具体安装步骤参考以下页面： GitLab Installation Omnibus GitLab documentation Gitlab Pages Gitlab Pages站点 Gitlab Pages工程 Gitlab Pages管理 GitLab Pages守</description>
    </item>
    
    <item>
      <title>网络爬虫页面去重技术</title>
      <link>https://www.androidpi.com/dev/search-engine/2018-03-24-simhash/</link>
      <pubDate>Sat, 24 Mar 2018 11:24:34 +0800</pubDate>
      
      <guid>https://www.androidpi.com/dev/search-engine/2018-03-24-simhash/</guid>
      <description>最近在使用ElasticSearch搭建一个小型的全文搜索引擎，用来搜索技术博客站点的文章。目前开发阶段爬取的站点60个左右，主要是国内的技</description>
    </item>
    
    <item>
      <title>网络爬虫概述</title>
      <link>https://www.androidpi.com/dev/search-engine/2018-03-24-web-scraping/</link>
      <pubDate>Sat, 24 Mar 2018 10:55:39 +0800</pubDate>
      
      <guid>https://www.androidpi.com/dev/search-engine/2018-03-24-web-scraping/</guid>
      <description>爬取之前 了解相关法律，爬取合乎法律的内容 对要爬取的站点进行适当背景调查，如检查robots.txt文件，网站地图，估算网站大小，识别网站所用</description>
    </item>
    
    <item>
      <title>网页正文提取技术</title>
      <link>https://www.androidpi.com/dev/search-engine/2018-03-17-html-page-content-extractor/</link>
      <pubDate>Sat, 17 Mar 2018 18:55:15 +0800</pubDate>
      
      <guid>https://www.androidpi.com/dev/search-engine/2018-03-17-html-page-content-extractor/</guid>
      <description>已存在的方法 机器学习和启发式方法(Heuristics) 特定站点解决方案(基于规则的抓取，DOM，文本，连接图) 基于视觉的建模 Tokens, N-Grams Shallow Text</description>
    </item>
    
    <item>
      <title>Kotlin数据类型</title>
      <link>https://www.androidpi.com/dev/kotlin/2017-11-01-kotlin-data-types/</link>
      <pubDate>Wed, 01 Nov 2017 17:09:39 +0800</pubDate>
      
      <guid>https://www.androidpi.com/dev/kotlin/2017-11-01-kotlin-data-types/</guid>
      <description>参考： 基本类型 相等性 空指针安全性 类型检查与转换 Java中有8种基本类型byte，short，int，long，float，double，bo</description>
    </item>
    
    <item>
      <title>Kotlin高阶函数与Lambdas</title>
      <link>https://www.androidpi.com/dev/kotlin/2017-10-30-kotlin-lambdas/</link>
      <pubDate>Mon, 30 Oct 2017 16:34:18 +0800</pubDate>
      
      <guid>https://www.androidpi.com/dev/kotlin/2017-10-30-kotlin-lambdas/</guid>
      <description>参考： Lambdas 高阶函数 一个高阶函数接收函数作为其参数，或者返回一个函数。举个栗子，如下所示，lock()函数接收一个lock对象和一个函数，获取锁</description>
    </item>
    
    <item>
      <title>Kotlin对象</title>
      <link>https://www.androidpi.com/dev/kotlin/2017-10-30-kotlin-object/</link>
      <pubDate>Mon, 30 Oct 2017 15:18:46 +0800</pubDate>
      
      <guid>https://www.androidpi.com/dev/kotlin/2017-10-30-kotlin-object/</guid>
      <description>参考: 对象声明 对象表达式和声明（Object Expressions and Declarations） 对象表达式（Object expressions） Object表达式</description>
    </item>
    
    <item>
      <title>Kotlin类的定义</title>
      <link>https://www.androidpi.com/dev/kotlin/2017-10-30-kotlin-class-definition/</link>
      <pubDate>Mon, 30 Oct 2017 14:36:02 +0800</pubDate>
      
      <guid>https://www.androidpi.com/dev/kotlin/2017-10-30-kotlin-class-definition/</guid>
      <description>数据类（Data Classes） 我们常常创建仅仅持有数据的类，类似Java中的POJO或JavaBean，其对象我们一般称为实体（entit</description>
    </item>
    
    <item>
      <title>Kotlin类属性与常量</title>
      <link>https://www.androidpi.com/dev/kotlin/2017-10-30-kotlin-properties/</link>
      <pubDate>Mon, 30 Oct 2017 03:37:02 +0800</pubDate>
      
      <guid>https://www.androidpi.com/dev/kotlin/2017-10-30-kotlin-properties/</guid>
      <description>参考： 对象表达式与声明 类属性 类属性是定义在类中的变量或不变量，分别使用var和val定义。这里把Kotlin中的不变量和常量作下区分，不变量</description>
    </item>
    
    <item>
      <title>Kotlin类与继承</title>
      <link>https://www.androidpi.com/dev/kotlin/2017-10-29-kotlin-class-inheritance/</link>
      <pubDate>Sun, 29 Oct 2017 15:27:43 +0800</pubDate>
      
      <guid>https://www.androidpi.com/dev/kotlin/2017-10-29-kotlin-class-inheritance/</guid>
      <description>类定义 类声明由类名、类首部（指定类型参数，主构造器等）、类正文（用花括号包围）。类首部和正文都是可选的。因此最简单的类定义为： class Empty // Implicitly inherits from Any</description>
    </item>
    
    <item>
      <title>Kotlin函数</title>
      <link>https://www.androidpi.com/dev/kotlin/2017-10-29-kotlin-function/</link>
      <pubDate>Sun, 29 Oct 2017 12:43:52 +0800</pubDate>
      
      <guid>https://www.androidpi.com/dev/kotlin/2017-10-29-kotlin-function/</guid>
      <description>参考: 函数 函数(Function) Kotlin使用名称函数（function）而非方法（method），我想是为了与Java方法作出区分，和</description>
    </item>
    
    <item>
      <title>思维剖析：分析与假设</title>
      <link>https://www.androidpi.com/dev/thought/2017-09-24-analysis-and-hypothesis/</link>
      <pubDate>Sun, 24 Sep 2017 23:39:07 +0800</pubDate>
      
      <guid>https://www.androidpi.com/dev/thought/2017-09-24-analysis-and-hypothesis/</guid>
      <description>最近在lintcode上做算法练习，有一两道基本的快速排序题，以前看过的基础算法没什么印象了，我想这样不行啊，每次看过一遍好像已经懂了，但过</description>
    </item>
    
    <item>
      <title>概念很重要</title>
      <link>https://www.androidpi.com/dev/thought/2017-09-17-concepts/</link>
      <pubDate>Sun, 17 Sep 2017 04:56:22 +0800</pubDate>
      
      <guid>https://www.androidpi.com/dev/thought/2017-09-17-concepts/</guid>
      <description>最近在看计算机网络方面的东西，需要根据HTTP协议实现一个基本完整的服务端、客户端以及网关，总想搞明白网络IO是如何抵达操作系统和硬件最终实</description>
    </item>
    
    <item>
      <title>阿里云ECS之Ubuntu服务器配置</title>
      <link>https://www.androidpi.com/dev/linux/2016-10-22-aliyun-ecs-ubuntu-server-config/</link>
      <pubDate>Sat, 22 Oct 2016 20:50:53 +0800</pubDate>
      
      <guid>https://www.androidpi.com/dev/linux/2016-10-22-aliyun-ecs-ubuntu-server-config/</guid>
      <description>连接到服务器 购买阿里云ECS时设置的管理员密码就是root密码了，可以用于ssh远程登录，使用秘钥登录的方式肯定更方便，那么首先登录服务器，</description>
    </item>
    
    <item>
      <title>Git笔记</title>
      <link>https://www.androidpi.com/dev/tools/2015-10-11-git/</link>
      <pubDate>Mon, 12 Oct 2015 01:58:23 +0800</pubDate>
      
      <guid>https://www.androidpi.com/dev/tools/2015-10-11-git/</guid>
      <description>配置 系统范围的配置($(prefix)/etc/gitconfig) $ git config --system --edit 当前用户全局配置(~/.gitconfig) $ git config --global --edit 当前仓库</description>
    </item>
    
    <item>
      <title>使用Markdown撰写技术博客</title>
      <link>https://www.androidpi.com/dev/pages/2015-10-11-markdown/</link>
      <pubDate>Sun, 11 Oct 2015 18:33:10 +0800</pubDate>
      
      <guid>https://www.androidpi.com/dev/pages/2015-10-11-markdown/</guid>
      <description>Markdown简介 Markdown可以概括为两点： 一种普通文本格式语法 一个使用perl编写的软件工具，它将这种普通文本格式转换为HTML 段</description>
    </item>
    
    <item>
      <title>Github Pages博客搭建</title>
      <link>https://www.androidpi.com/dev/pages/2015-10-11-github-pages/</link>
      <pubDate>Sun, 11 Oct 2015 15:28:06 +0800</pubDate>
      
      <guid>https://www.androidpi.com/dev/pages/2015-10-11-github-pages/</guid>
      <description>搭建Github Pages的方式 目前常见的Github Pages静态站点的搭建方式有如下几种： Jekyll Hexo Hugo 本站点使用的是Hugo，因为它在本地构建</description>
    </item>
    
    <item>
      <title>Gitlab Pages:使用Gitlab Issue API构建评论系统</title>
      <link>https://www.androidpi.com/dev/pages/2018-06-07-gitlab-pages-comments-with-gitlab-issue-api/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.androidpi.com/dev/pages/2018-06-07-gitlab-pages-comments-with-gitlab-issue-api/</guid>
      <description></description>
    </item>
    
    <item>
      <title>HTTP服务API的安全性</title>
      <link>https://www.androidpi.com/dev/security/2018-06-01-http-services-api-security/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.androidpi.com/dev/security/2018-06-01-http-services-api-security/</guid>
      <description>这里讨论互联网中使用最广泛的应用层协议，即HTTP协议及使用其开发的网络服务API的安全性问题。我们期望达到的目的按重要性排序，有如下几种：</description>
    </item>
    
    <item>
      <title>Lunr全文搜索引擎中文支持</title>
      <link>https://www.androidpi.com/dev/search-engine/2018-06-10-lunrjs-chinese-support/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.androidpi.com/dev/search-engine/2018-06-10-lunrjs-chinese-support/</guid>
      <description>参考： lunrjs lunrjs source lunrjs issue 91 lunrjs issue 95 lunrjs-languages 开始处理各种语言 elasticlunr.js elasticlunr.js 最新版本v0.6.7发布啦</description>
    </item>
    
    <item>
      <title>React Native之Android开发：原生UI组件</title>
      <link>https://www.androidpi.com/dev/react-native/2018-05-28-react-native-android-native-ui-components/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.androidpi.com/dev/react-native/2018-05-28-react-native-android-native-ui-components/</guid>
      <description>参考Native UI Components 原生APP中有成千上万的UI小部件可供使用，这其中包括平台自身的、第三方的以及自定义。React Native已经包装了若</description>
    </item>
    
    <item>
      <title>React Native之Android开发：原生模块</title>
      <link>https://www.androidpi.com/dev/react-native/2018-05-21-react-native-android-native-modules/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.androidpi.com/dev/react-native/2018-05-21-react-native-android-native-modules/</guid>
      <description>如果React Native提供了调用操作系统所提供的所有功能的能力，那么就可以完全抛开原生代码，仅仅使用JavaScript就可以进行跨平台</description>
    </item>
    
    <item>
      <title>Wi-Fi技术综述</title>
      <link>https://www.androidpi.com/dev/networks/wifi/2018-05-09-wifi-overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.androidpi.com/dev/networks/wifi/2018-05-09-wifi-overview/</guid>
      <description>导引 Wi-Fi是一种基于IEEE 802.11标准的无线局域网技术，术语&amp;rdquo;Wi-Fi&amp;ldquo;是Wi-Fi技术联盟的商标，Wi</description>
    </item>
    
    <item>
      <title>Wi-Fi：Portal认证</title>
      <link>https://www.androidpi.com/dev/networks/wifi/2018-05-09-wifi-portal-authentication/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.androidpi.com/dev/networks/wifi/2018-05-09-wifi-portal-authentication/</guid>
      <description>参考： Captive Portal – 连接WiFi自动弹出认证页面</description>
    </item>
    
    <item>
      <title>Wi-Fi：无线路由器、AC、AP组网</title>
      <link>https://www.androidpi.com/dev/networks/wifi/2018-05-09-wifi-wireless-router-ac-ap/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.androidpi.com/dev/networks/wifi/2018-05-09-wifi-wireless-router-ac-ap/</guid>
      <description></description>
    </item>
    
    <item>
      <title>中文分词技术综述</title>
      <link>https://www.androidpi.com/dev/search-engine/2018-06-20-chinese-tokenizer-overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.androidpi.com/dev/search-engine/2018-06-20-chinese-tokenizer-overview/</guid>
      <description>参考： 中文分词十年回顾 中文分词算法概述 中文搜索引擎技术揭密：中文分词 中文分词原理及常用Python中文分词库介绍 中文分词基本算法介绍 深度学习</description>
    </item>
    
    <item>
      <title>信息检索技术综述</title>
      <link>https://www.androidpi.com/dev/search-engine/2018-06-10-information-retrieval-overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.androidpi.com/dev/search-engine/2018-06-10-information-retrieval-overview/</guid>
      <description>信息检索(Information Retrieval)是从非结构化的大数据集(通常是文本)中寻找满足指定信息需求的资料（通常是文档）。 倒排索</description>
    </item>
    
    <item>
      <title>内网穿透与Ngrok</title>
      <link>https://www.androidpi.com/dev/networks/2018-04-29-ngrok-server/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.androidpi.com/dev/networks/2018-04-29-ngrok-server/</guid>
      <description></description>
    </item>
    
    <item>
      <title>数据海洋巡航</title>
      <link>https://www.androidpi.com/dev/search-engine/2018-07-02-cruising-the-data-ocean/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.androidpi.com/dev/search-engine/2018-07-02-cruising-the-data-ocean/</guid>
      <description>Cruising the Data Ocean</description>
    </item>
    
    <item>
      <title>编程语言排名</title>
      <link>https://www.androidpi.com/dev/thought/2018-07-17-programming-language-rank/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.androidpi.com/dev/thought/2018-07-17-programming-language-rank/</guid>
      <description>https://www.benfrederickson.com/ranking-programming-languages-by-github-users/</description>
    </item>
    
    <item>
      <title>静态站点的全文搜索</title>
      <link>https://www.androidpi.com/dev/pages/2018-06-07-static-site-full-text-search/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.androidpi.com/dev/pages/2018-06-07-static-site-full-text-search/</guid>
      <description></description>
    </item>
    
  </channel>
</rss>